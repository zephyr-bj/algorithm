repeating char, hash table as position record [the value is show up position]
  [1]Longest Substring Without Repeating Characters (0003)
  [1]fraction to decimal (0166) search the repeated remainder
  [2]contains duplicate (0217)
  [2]contains nearby duplicate (0219)
  [2]contains nearby almost duplicate (0220)
  [3]First Unique Character (0387)
  
Anagram, hash table as distribution [the value is show up frequency]
  [1]Substring with Concatenation of All Words (0030)
  [1]minimum window in S which will contain all the characters in T (0076)
  [2] ** Group Anagrams (0049) excellent algorithm to collect result vectors
  [2]max points on a line (0149) search all points on common lines 
  [2] ** find all repeated DNA substring with 10 characters (0187) good algorithm only take repeated key once
  [3]is Anagram (0242)
  [3]word pattern (0290) back and forth mapping
  [3]bulls and cows (0299)
  [3]Intersection of Two Arrays (0349)
  [3]Intersection of Two Arrays II (0350)
  
hash table for O(1) search 
  [1]two sum (0001) search two numbers sum to zero
  [1]Four Sum II (0454) search four numbers sum to zero
  [2]Longest Consecutive Sequence (0128) search longest Consecutive Sequence
  [2]H Index (0274) search the H index (not calculate)
  [2]Palindrome Pair (0336) search all the Palindrome Pairs
 
6+10+5
1. 2/find_repeat + 3/find_duplicate + 1/find_unique
2. 2/distribution_match + 3/group_Anagram + 5/distribution_compare
3. 2/cal_sum + 3/consecutive_search

greatest common dividor
unsigned gcd2(unsigned u, unsigned v) {
    while ( v != 0) {
        unsigned r = u % v;
        u = v;
        v = r;
    }
    return u;
}
    
know the key value ranges:
  H Index: can not exceeds the number of papers
  contains almost duplicate: compress the key value range
